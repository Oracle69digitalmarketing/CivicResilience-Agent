
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"



	_ "syscall"


	_xtest "syscall_test"

)

var tests = []testing.InternalTest{

	{"TestSCMCredentials", _xtest.TestSCMCredentials},

	{"TestDirent", _xtest.TestDirent},

	{"TestDirentRepeat", _xtest.TestDirentRepeat},

	{"TestCloneNEWUSERAndRemap", _xtest.TestCloneNEWUSERAndRemap},

	{"TestEmptyCredGroupsDisableSetgroups", _xtest.TestEmptyCredGroupsDisableSetgroups},

	{"TestUnshare", _xtest.TestUnshare},

	{"TestGroupCleanup", _xtest.TestGroupCleanup},

	{"TestGroupCleanupUserNamespace", _xtest.TestGroupCleanupUserNamespace},

	{"TestUnshareMountNameSpace", _xtest.TestUnshareMountNameSpace},

	{"TestUnshareMountNameSpaceChroot", _xtest.TestUnshareMountNameSpaceChroot},

	{"TestUnshareUidGidMapping", _xtest.TestUnshareUidGidMapping},

	{"TestUseCgroupFD", _xtest.TestUseCgroupFD},

	{"TestCloneTimeNamespace", _xtest.TestCloneTimeNamespace},

	{"TestPidFD", _xtest.TestPidFD},

	{"TestPidFDWithUserNS", _xtest.TestPidFDWithUserNS},

	{"TestPidFDClone3", _xtest.TestPidFDClone3},

	{"TestAmbientCaps", _xtest.TestAmbientCaps},

	{"TestAmbientCapsUserns", _xtest.TestAmbientCapsUserns},

	{"TestDeathSignalSetuid", _xtest.TestDeathSignalSetuid},

	{"TestZeroSysProcAttr", _xtest.TestZeroSysProcAttr},

	{"TestSetpgid", _xtest.TestSetpgid},

	{"TestPgid", _xtest.TestPgid},

	{"TestForeground", _xtest.TestForeground},

	{"TestForegroundSignal", _xtest.TestForegroundSignal},

	{"TestInvalidExec", _xtest.TestInvalidExec},

	{"TestExec", _xtest.TestExec},

	{"TestExecHelper", _xtest.TestExecHelper},

	{"TestRlimitRestored", _xtest.TestRlimitRestored},

	{"TestForkExecNilArgv", _xtest.TestForkExecNilArgv},

	{"TestMmap", _xtest.TestMmap},

	{"TestOpenFileLimit", _xtest.TestOpenFileLimit},

	{"TestFaccessat", _xtest.TestFaccessat},

	{"TestFchmodat", _xtest.TestFchmodat},

	{"TestParseNetlinkMessage", _xtest.TestParseNetlinkMessage},

	{"TestSyscallNoError", _xtest.TestSyscallNoError},

	{"TestAllThreadsSyscall", _xtest.TestAllThreadsSyscall},

	{"TestSetuidEtc", _xtest.TestSetuidEtc},

	{"TestAllThreadsSyscallError", _xtest.TestAllThreadsSyscallError},

	{"TestAllThreadsSyscallBlockedSyscall", _xtest.TestAllThreadsSyscallBlockedSyscall},

	{"TestPrlimitSelf", _xtest.TestPrlimitSelf},

	{"TestPrlimitOtherProcess", _xtest.TestPrlimitOtherProcess},

	{"TestPrlimitFileLimit", _xtest.TestPrlimitFileLimit},

	{"TestExecPtrace", _xtest.TestExecPtrace},

	{"TestEnv", _xtest.TestEnv},

	{"TestExecErrPermutedFds", _xtest.TestExecErrPermutedFds},

	{"TestGettimeofday", _xtest.TestGettimeofday},

	{"TestFcntlFlock", _xtest.TestFcntlFlock},

	{"TestPassFD", _xtest.TestPassFD},

	{"TestUnixRightsRoundtrip", _xtest.TestUnixRightsRoundtrip},

	{"TestSeekFailure", _xtest.TestSeekFailure},

	{"TestSetsockoptString", _xtest.TestSetsockoptString},

	{"TestENFILETemporary", _xtest.TestENFILETemporary},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "syscall"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_xtest.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

