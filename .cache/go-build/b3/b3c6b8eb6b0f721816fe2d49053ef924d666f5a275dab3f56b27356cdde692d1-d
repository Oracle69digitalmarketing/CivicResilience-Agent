
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "sync/atomic"


	_xtest "sync/atomic_test"

)

var tests = []testing.InternalTest{

	{"TestSwapInt32", _xtest.TestSwapInt32},

	{"TestSwapInt32Method", _xtest.TestSwapInt32Method},

	{"TestSwapUint32", _xtest.TestSwapUint32},

	{"TestSwapUint32Method", _xtest.TestSwapUint32Method},

	{"TestSwapInt64", _xtest.TestSwapInt64},

	{"TestSwapInt64Method", _xtest.TestSwapInt64Method},

	{"TestSwapUint64", _xtest.TestSwapUint64},

	{"TestSwapUint64Method", _xtest.TestSwapUint64Method},

	{"TestSwapUintptr", _xtest.TestSwapUintptr},

	{"TestSwapUintptrMethod", _xtest.TestSwapUintptrMethod},

	{"TestSwapPointer", _xtest.TestSwapPointer},

	{"TestSwapPointerMethod", _xtest.TestSwapPointerMethod},

	{"TestAddInt32", _xtest.TestAddInt32},

	{"TestAddInt32Method", _xtest.TestAddInt32Method},

	{"TestAddUint32", _xtest.TestAddUint32},

	{"TestAddUint32Method", _xtest.TestAddUint32Method},

	{"TestAddInt64", _xtest.TestAddInt64},

	{"TestAddInt64Method", _xtest.TestAddInt64Method},

	{"TestAddUint64", _xtest.TestAddUint64},

	{"TestAddUint64Method", _xtest.TestAddUint64Method},

	{"TestAddUintptr", _xtest.TestAddUintptr},

	{"TestAddUintptrMethod", _xtest.TestAddUintptrMethod},

	{"TestAndInt32", _xtest.TestAndInt32},

	{"TestAndInt32Method", _xtest.TestAndInt32Method},

	{"TestAndUint32", _xtest.TestAndUint32},

	{"TestAndUint32Method", _xtest.TestAndUint32Method},

	{"TestAndInt64", _xtest.TestAndInt64},

	{"TestAndInt64Method", _xtest.TestAndInt64Method},

	{"TestAndUint64", _xtest.TestAndUint64},

	{"TestAndUint64Method", _xtest.TestAndUint64Method},

	{"TestAndUintptr", _xtest.TestAndUintptr},

	{"TestAndUintptrMethod", _xtest.TestAndUintptrMethod},

	{"TestOrInt32", _xtest.TestOrInt32},

	{"TestOrInt32Method", _xtest.TestOrInt32Method},

	{"TestOrUint32", _xtest.TestOrUint32},

	{"TestOrUint32Method", _xtest.TestOrUint32Method},

	{"TestOrInt64", _xtest.TestOrInt64},

	{"TestOrInt64Method", _xtest.TestOrInt64Method},

	{"TestOrUint64", _xtest.TestOrUint64},

	{"TestOrUint64Method", _xtest.TestOrUint64Method},

	{"TestOrUintptr", _xtest.TestOrUintptr},

	{"TestOrUintptrMethod", _xtest.TestOrUintptrMethod},

	{"TestCompareAndSwapInt32", _xtest.TestCompareAndSwapInt32},

	{"TestCompareAndSwapInt32Method", _xtest.TestCompareAndSwapInt32Method},

	{"TestCompareAndSwapUint32", _xtest.TestCompareAndSwapUint32},

	{"TestCompareAndSwapUint32Method", _xtest.TestCompareAndSwapUint32Method},

	{"TestCompareAndSwapInt64", _xtest.TestCompareAndSwapInt64},

	{"TestCompareAndSwapInt64Method", _xtest.TestCompareAndSwapInt64Method},

	{"TestCompareAndSwapUint64", _xtest.TestCompareAndSwapUint64},

	{"TestCompareAndSwapUint64Method", _xtest.TestCompareAndSwapUint64Method},

	{"TestCompareAndSwapUintptr", _xtest.TestCompareAndSwapUintptr},

	{"TestCompareAndSwapUintptrMethod", _xtest.TestCompareAndSwapUintptrMethod},

	{"TestCompareAndSwapPointer", _xtest.TestCompareAndSwapPointer},

	{"TestCompareAndSwapPointerMethod", _xtest.TestCompareAndSwapPointerMethod},

	{"TestLoadInt32", _xtest.TestLoadInt32},

	{"TestLoadInt32Method", _xtest.TestLoadInt32Method},

	{"TestLoadUint32", _xtest.TestLoadUint32},

	{"TestLoadUint32Method", _xtest.TestLoadUint32Method},

	{"TestLoadInt64", _xtest.TestLoadInt64},

	{"TestLoadInt64Method", _xtest.TestLoadInt64Method},

	{"TestLoadUint64", _xtest.TestLoadUint64},

	{"TestLoadUint64Method", _xtest.TestLoadUint64Method},

	{"TestLoadUintptr", _xtest.TestLoadUintptr},

	{"TestLoadUintptrMethod", _xtest.TestLoadUintptrMethod},

	{"TestLoadPointer", _xtest.TestLoadPointer},

	{"TestLoadPointerMethod", _xtest.TestLoadPointerMethod},

	{"TestStoreInt32", _xtest.TestStoreInt32},

	{"TestStoreInt32Method", _xtest.TestStoreInt32Method},

	{"TestStoreUint32", _xtest.TestStoreUint32},

	{"TestStoreUint32Method", _xtest.TestStoreUint32Method},

	{"TestStoreInt64", _xtest.TestStoreInt64},

	{"TestStoreInt64Method", _xtest.TestStoreInt64Method},

	{"TestStoreUint64", _xtest.TestStoreUint64},

	{"TestStoreUint64Method", _xtest.TestStoreUint64Method},

	{"TestStoreUintptr", _xtest.TestStoreUintptr},

	{"TestStoreUintptrMethod", _xtest.TestStoreUintptrMethod},

	{"TestStorePointer", _xtest.TestStorePointer},

	{"TestStorePointerMethod", _xtest.TestStorePointerMethod},

	{"TestHammer32", _xtest.TestHammer32},

	{"TestHammer64", _xtest.TestHammer64},

	{"TestHammerStoreLoad", _xtest.TestHammerStoreLoad},

	{"TestStoreLoadSeqCst32", _xtest.TestStoreLoadSeqCst32},

	{"TestStoreLoadSeqCst64", _xtest.TestStoreLoadSeqCst64},

	{"TestStoreLoadRelAcq32", _xtest.TestStoreLoadRelAcq32},

	{"TestStoreLoadRelAcq64", _xtest.TestStoreLoadRelAcq64},

	{"TestUnaligned64", _xtest.TestUnaligned64},

	{"TestAutoAligned64", _xtest.TestAutoAligned64},

	{"TestNilDeref", _xtest.TestNilDeref},

	{"TestValue", _xtest.TestValue},

	{"TestValueLarge", _xtest.TestValueLarge},

	{"TestValuePanic", _xtest.TestValuePanic},

	{"TestValueConcurrent", _xtest.TestValueConcurrent},

	{"TestValue_Swap", _xtest.TestValue_Swap},

	{"TestValueSwapConcurrent", _xtest.TestValueSwapConcurrent},

	{"TestValue_CompareAndSwap", _xtest.TestValue_CompareAndSwap},

	{"TestValueCompareAndSwapConcurrent", _xtest.TestValueCompareAndSwapConcurrent},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkValueRead", _xtest.BenchmarkValueRead},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "sync/atomic"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

