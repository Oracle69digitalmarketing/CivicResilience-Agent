
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "internal/synctest"


	_xtest "internal/synctest_test"

)

var tests = []testing.InternalTest{

	{"TestNow", _xtest.TestNow},

	{"TestMonotonicClock", _xtest.TestMonotonicClock},

	{"TestRunEmpty", _xtest.TestRunEmpty},

	{"TestSimpleWait", _xtest.TestSimpleWait},

	{"TestGoroutineWait", _xtest.TestGoroutineWait},

	{"TestWait", _xtest.TestWait},

	{"TestMallocs", _xtest.TestMallocs},

	{"TestTimerReadBeforeDeadline", _xtest.TestTimerReadBeforeDeadline},

	{"TestTimerReadAfterDeadline", _xtest.TestTimerReadAfterDeadline},

	{"TestTimerReset", _xtest.TestTimerReset},

	{"TestTimeAfter", _xtest.TestTimeAfter},

	{"TestTimerAfterBubbleExit", _xtest.TestTimerAfterBubbleExit},

	{"TestTimerFromOutsideBubble", _xtest.TestTimerFromOutsideBubble},

	{"TestTimerNondeterminism", _xtest.TestTimerNondeterminism},

	{"TestSleepNondeterminism", _xtest.TestSleepNondeterminism},

	{"TestTimerRunsImmediately", _xtest.TestTimerRunsImmediately},

	{"TestTimerRanInPast", _xtest.TestTimerRanInPast},

	{"TestAfterFuncRunsImmediately", _xtest.TestAfterFuncRunsImmediately},

	{"TestChannelFromOutsideBubble", _xtest.TestChannelFromOutsideBubble},

	{"TestChannelMovedOutOfBubble", _xtest.TestChannelMovedOutOfBubble},

	{"TestTimerFromInsideBubble", _xtest.TestTimerFromInsideBubble},

	{"TestDeadlockRoot", _xtest.TestDeadlockRoot},

	{"TestDeadlockChild", _xtest.TestDeadlockChild},

	{"TestDeadlockTicker", _xtest.TestDeadlockTicker},

	{"TestCond", _xtest.TestCond},

	{"TestIteratorPush", _xtest.TestIteratorPush},

	{"TestIteratorPull", _xtest.TestIteratorPull},

	{"TestReflectFuncOf", _xtest.TestReflectFuncOf},

	{"TestWaitGroupInBubble", _xtest.TestWaitGroupInBubble},

	{"TestWaitGroupRacingAdds", _xtest.TestWaitGroupRacingAdds},

	{"TestWaitGroupOutOfBubble", _xtest.TestWaitGroupOutOfBubble},

	{"TestWaitGroupMovedIntoBubble", _xtest.TestWaitGroupMovedIntoBubble},

	{"TestWaitGroupMovedOutOfBubble", _xtest.TestWaitGroupMovedOutOfBubble},

	{"TestWaitGroupMovedBetweenBubblesWithNonZeroCount", _xtest.TestWaitGroupMovedBetweenBubblesWithNonZeroCount},

	{"TestWaitGroupDisassociateInWait", _xtest.TestWaitGroupDisassociateInWait},

	{"TestWaitGroupDisassociateInAdd", _xtest.TestWaitGroupDisassociateInAdd},

	{"TestWaitGroupLinkerAllocated", _xtest.TestWaitGroupLinkerAllocated},

	{"TestWaitGroupHeapAllocated", _xtest.TestWaitGroupHeapAllocated},

	{"TestHappensBefore", _xtest.TestHappensBefore},

	{"TestWeak", _xtest.TestWeak},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "internal/synctest"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

