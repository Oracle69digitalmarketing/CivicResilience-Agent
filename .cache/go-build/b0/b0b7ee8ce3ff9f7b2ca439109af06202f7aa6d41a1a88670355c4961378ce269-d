
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"



	_test "go/build"


)

var tests = []testing.InternalTest{

	{"TestMatch", _test.TestMatch},

	{"TestDotSlashImport", _test.TestDotSlashImport},

	{"TestEmptyImport", _test.TestEmptyImport},

	{"TestEmptyFolderImport", _test.TestEmptyFolderImport},

	{"TestMultiplePackageImport", _test.TestMultiplePackageImport},

	{"TestLocalDirectory", _test.TestLocalDirectory},

	{"TestShouldBuild", _test.TestShouldBuild},

	{"TestGoodOSArchFile", _test.TestGoodOSArchFile},

	{"TestMatchFile", _test.TestMatchFile},

	{"TestImportCmd", _test.TestImportCmd},

	{"TestExpandSrcDir", _test.TestExpandSrcDir},

	{"TestShellSafety", _test.TestShellSafety},

	{"TestImportDirNotExist", _test.TestImportDirNotExist},

	{"TestImportVendor", _test.TestImportVendor},

	{"TestImportVendorFailure", _test.TestImportVendorFailure},

	{"TestImportVendorParentFailure", _test.TestImportVendorParentFailure},

	{"TestImportPackageOutsideModule", _test.TestImportPackageOutsideModule},

	{"TestIssue23594", _test.TestIssue23594},

	{"TestIssue56509", _test.TestIssue56509},

	{"TestMissingImportErrorRepetition", _test.TestMissingImportErrorRepetition},

	{"TestCgoImportsIgnored", _test.TestCgoImportsIgnored},

	{"TestAllTags", _test.TestAllTags},

	{"TestAllTagsNonSourceFile", _test.TestAllTagsNonSourceFile},

	{"TestDirectives", _test.TestDirectives},

	{"TestDependencies", _test.TestDependencies},

	{"TestStdlibLowercase", _test.TestStdlibLowercase},

	{"TestFindImports", _test.TestFindImports},

	{"TestReadGoInfo", _test.TestReadGoInfo},

	{"TestReadComments", _test.TestReadComments},

	{"TestReadFailuresIgnored", _test.TestReadFailuresIgnored},

	{"TestReadEmbed", _test.TestReadEmbed},

	{"TestGoodOSArch", _test.TestGoodOSArch},

	{"TestVendorPackages", _test.TestVendorPackages},

	{"TestIsAllowed", _test.TestIsAllowed},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkImportVendor", _test.BenchmarkImportVendor},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "go/build"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_test.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

