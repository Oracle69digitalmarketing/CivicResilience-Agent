
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"



	_test "crypto/tls"


	_ "crypto/tls_test"

)

var tests = []testing.InternalTest{

	{"TestSignatureSelection", _test.TestSignatureSelection},

	{"TestLegacyTypeAndHash", _test.TestLegacyTypeAndHash},

	{"TestSupportedSignatureAlgorithms", _test.TestSupportedSignatureAlgorithms},

	{"TestBogoSuite", _test.TestBogoSuite},

	{"TestWeakCertCache", _test.TestWeakCertCache},

	{"TestRoundUp", _test.TestRoundUp},

	{"TestRemovePadding", _test.TestRemovePadding},

	{"TestCertificateSelection", _test.TestCertificateSelection},

	{"TestDynamicRecordSizingWithStreamCipher", _test.TestDynamicRecordSizingWithStreamCipher},

	{"TestDynamicRecordSizingWithCBC", _test.TestDynamicRecordSizingWithCBC},

	{"TestDynamicRecordSizingWithAEAD", _test.TestDynamicRecordSizingWithAEAD},

	{"TestDynamicRecordSizingWithTLSv13", _test.TestDynamicRecordSizingWithTLSv13},

	{"TestHairpinInClose", _test.TestHairpinInClose},

	{"TestRecordBadVersionTLS13", _test.TestRecordBadVersionTLS13},

	{"TestDecodeECHConfigLists", _test.TestDecodeECHConfigLists},

	{"TestSkipBadConfigs", _test.TestSkipBadConfigs},

	{"TestFIPSServerProtocolVersion", _test.TestFIPSServerProtocolVersion},

	{"TestFIPSServerCipherSuites", _test.TestFIPSServerCipherSuites},

	{"TestFIPSServerCurves", _test.TestFIPSServerCurves},

	{"TestFIPSServerSignatureAndHash", _test.TestFIPSServerSignatureAndHash},

	{"TestFIPSClientHello", _test.TestFIPSClientHello},

	{"TestFIPSCertAlgs", _test.TestFIPSCertAlgs},

	{"TestHandshakeClientRSARC4", _test.TestHandshakeClientRSARC4},

	{"TestHandshakeClientRSAAES128GCM", _test.TestHandshakeClientRSAAES128GCM},

	{"TestHandshakeClientRSAAES256GCM", _test.TestHandshakeClientRSAAES256GCM},

	{"TestHandshakeClientECDHERSAAES", _test.TestHandshakeClientECDHERSAAES},

	{"TestHandshakeClientECDHEECDSAAES", _test.TestHandshakeClientECDHEECDSAAES},

	{"TestHandshakeClientECDHEECDSAAESGCM", _test.TestHandshakeClientECDHEECDSAAESGCM},

	{"TestHandshakeClientAES256GCMSHA384", _test.TestHandshakeClientAES256GCMSHA384},

	{"TestHandshakeClientAES128CBCSHA256", _test.TestHandshakeClientAES128CBCSHA256},

	{"TestHandshakeClientECDHERSAAES128CBCSHA256", _test.TestHandshakeClientECDHERSAAES128CBCSHA256},

	{"TestHandshakeClientECDHEECDSAAES128CBCSHA256", _test.TestHandshakeClientECDHEECDSAAES128CBCSHA256},

	{"TestHandshakeClientX25519", _test.TestHandshakeClientX25519},

	{"TestHandshakeClientP256", _test.TestHandshakeClientP256},

	{"TestHandshakeClientHelloRetryRequest", _test.TestHandshakeClientHelloRetryRequest},

	{"TestHandshakeClientECDHERSAChaCha20", _test.TestHandshakeClientECDHERSAChaCha20},

	{"TestHandshakeClientECDHEECDSAChaCha20", _test.TestHandshakeClientECDHEECDSAChaCha20},

	{"TestHandshakeClientAES128SHA256", _test.TestHandshakeClientAES128SHA256},

	{"TestHandshakeClientAES256SHA384", _test.TestHandshakeClientAES256SHA384},

	{"TestHandshakeClientCHACHA20SHA256", _test.TestHandshakeClientCHACHA20SHA256},

	{"TestHandshakeClientECDSATLS13", _test.TestHandshakeClientECDSATLS13},

	{"TestHandshakeClientEd25519", _test.TestHandshakeClientEd25519},

	{"TestHandshakeClientCertRSA", _test.TestHandshakeClientCertRSA},

	{"TestHandshakeClientCertECDSA", _test.TestHandshakeClientCertECDSA},

	{"TestHandshakeClientCertRSAPSS", _test.TestHandshakeClientCertRSAPSS},

	{"TestHandshakeClientCertRSAPKCS1v15", _test.TestHandshakeClientCertRSAPKCS1v15},

	{"TestClientKeyUpdate", _test.TestClientKeyUpdate},

	{"TestResumption", _test.TestResumption},

	{"TestLRUClientSessionCache", _test.TestLRUClientSessionCache},

	{"TestKeyLogTLS12", _test.TestKeyLogTLS12},

	{"TestKeyLogTLS13", _test.TestKeyLogTLS13},

	{"TestHandshakeClientALPNMatch", _test.TestHandshakeClientALPNMatch},

	{"TestServerSelectingUnconfiguredApplicationProtocol", _test.TestServerSelectingUnconfiguredApplicationProtocol},

	{"TestHandshakClientSCTs", _test.TestHandshakClientSCTs},

	{"TestRenegotiationRejected", _test.TestRenegotiationRejected},

	{"TestRenegotiateOnce", _test.TestRenegotiateOnce},

	{"TestRenegotiateTwice", _test.TestRenegotiateTwice},

	{"TestRenegotiateTwiceRejected", _test.TestRenegotiateTwiceRejected},

	{"TestHandshakeClientExportKeyingMaterial", _test.TestHandshakeClientExportKeyingMaterial},

	{"TestHostnameInSNI", _test.TestHostnameInSNI},

	{"TestServerSelectingUnconfiguredCipherSuite", _test.TestServerSelectingUnconfiguredCipherSuite},

	{"TestVerifyConnection", _test.TestVerifyConnection},

	{"TestVerifyPeerCertificate", _test.TestVerifyPeerCertificate},

	{"TestFailedWrite", _test.TestFailedWrite},

	{"TestBuffering", _test.TestBuffering},

	{"TestAlertFlushing", _test.TestAlertFlushing},

	{"TestHandshakeRace", _test.TestHandshakeRace},

	{"TestGetClientCertificate", _test.TestGetClientCertificate},

	{"TestRSAPSSKeyError", _test.TestRSAPSSKeyError},

	{"TestCloseClientConnectionOnIdleServer", _test.TestCloseClientConnectionOnIdleServer},

	{"TestDowngradeCanary", _test.TestDowngradeCanary},

	{"TestResumptionKeepsOCSPAndSCT", _test.TestResumptionKeepsOCSPAndSCT},

	{"TestClientHandshakeContextCancellation", _test.TestClientHandshakeContextCancellation},

	{"TestTLS13OnlyClientHelloCipherSuite", _test.TestTLS13OnlyClientHelloCipherSuite},

	{"TestHandshakeRSATooBig", _test.TestHandshakeRSATooBig},

	{"TestTLS13ECHRejectionCallbacks", _test.TestTLS13ECHRejectionCallbacks},

	{"TestECHTLS12Server", _test.TestECHTLS12Server},

	{"TestMarshalUnmarshal", _test.TestMarshalUnmarshal},

	{"TestFuzz", _test.TestFuzz},

	{"TestRejectEmptySCTList", _test.TestRejectEmptySCTList},

	{"TestRejectEmptySCT", _test.TestRejectEmptySCT},

	{"TestRejectDuplicateExtensions", _test.TestRejectDuplicateExtensions},

	{"TestSimpleError", _test.TestSimpleError},

	{"TestRejectBadProtocolVersion", _test.TestRejectBadProtocolVersion},

	{"TestNoSuiteOverlap", _test.TestNoSuiteOverlap},

	{"TestNoCompressionOverlap", _test.TestNoCompressionOverlap},

	{"TestNoRC4ByDefault", _test.TestNoRC4ByDefault},

	{"TestRejectSNIWithTrailingDot", _test.TestRejectSNIWithTrailingDot},

	{"TestDontSelectECDSAWithRSAKey", _test.TestDontSelectECDSAWithRSAKey},

	{"TestDontSelectRSAWithECDSAKey", _test.TestDontSelectRSAWithECDSAKey},

	{"TestRenegotiationExtension", _test.TestRenegotiationExtension},

	{"TestTLS12OnlyCipherSuites", _test.TestTLS12OnlyCipherSuites},

	{"TestTLSPointFormats", _test.TestTLSPointFormats},

	{"TestAlertForwarding", _test.TestAlertForwarding},

	{"TestClose", _test.TestClose},

	{"TestVersion", _test.TestVersion},

	{"TestCipherSuitePreference", _test.TestCipherSuitePreference},

	{"TestSCTHandshake", _test.TestSCTHandshake},

	{"TestCrossVersionResume", _test.TestCrossVersionResume},

	{"TestHandshakeServerRSARC4", _test.TestHandshakeServerRSARC4},

	{"TestHandshakeServerRSA3DES", _test.TestHandshakeServerRSA3DES},

	{"TestHandshakeServerRSAAES", _test.TestHandshakeServerRSAAES},

	{"TestHandshakeServerAESGCM", _test.TestHandshakeServerAESGCM},

	{"TestHandshakeServerAES256GCMSHA384", _test.TestHandshakeServerAES256GCMSHA384},

	{"TestHandshakeServerAES128SHA256", _test.TestHandshakeServerAES128SHA256},

	{"TestHandshakeServerAES256SHA384", _test.TestHandshakeServerAES256SHA384},

	{"TestHandshakeServerCHACHA20SHA256", _test.TestHandshakeServerCHACHA20SHA256},

	{"TestHandshakeServerECDHEECDSAAES", _test.TestHandshakeServerECDHEECDSAAES},

	{"TestHandshakeServerX25519", _test.TestHandshakeServerX25519},

	{"TestHandshakeServerP256", _test.TestHandshakeServerP256},

	{"TestHandshakeServerHelloRetryRequest", _test.TestHandshakeServerHelloRetryRequest},

	{"TestHandshakeServerKeySharePreference", _test.TestHandshakeServerKeySharePreference},

	{"TestHandshakeServerALPN", _test.TestHandshakeServerALPN},

	{"TestHandshakeServerALPNNoMatch", _test.TestHandshakeServerALPNNoMatch},

	{"TestHandshakeServerALPNNotConfigured", _test.TestHandshakeServerALPNNotConfigured},

	{"TestHandshakeServerALPNFallback", _test.TestHandshakeServerALPNFallback},

	{"TestHandshakeServerSNI", _test.TestHandshakeServerSNI},

	{"TestHandshakeServerSNIGetCertificate", _test.TestHandshakeServerSNIGetCertificate},

	{"TestHandshakeServerSNIGetCertificateNotFound", _test.TestHandshakeServerSNIGetCertificateNotFound},

	{"TestHandshakeServerGetCertificateExtensions", _test.TestHandshakeServerGetCertificateExtensions},

	{"TestHandshakeServerSNIGetCertificateError", _test.TestHandshakeServerSNIGetCertificateError},

	{"TestHandshakeServerEmptyCertificates", _test.TestHandshakeServerEmptyCertificates},

	{"TestServerResumption", _test.TestServerResumption},

	{"TestServerResumptionDisabled", _test.TestServerResumptionDisabled},

	{"TestFallbackSCSV", _test.TestFallbackSCSV},

	{"TestHandshakeServerExportKeyingMaterial", _test.TestHandshakeServerExportKeyingMaterial},

	{"TestHandshakeServerRSAPKCS1v15", _test.TestHandshakeServerRSAPKCS1v15},

	{"TestHandshakeServerRSAPSS", _test.TestHandshakeServerRSAPSS},

	{"TestHandshakeServerEd25519", _test.TestHandshakeServerEd25519},

	{"TestClientAuth", _test.TestClientAuth},

	{"TestSNIGivenOnFailure", _test.TestSNIGivenOnFailure},

	{"TestGetConfigForClient", _test.TestGetConfigForClient},

	{"TestCloseServerConnectionOnIdleClient", _test.TestCloseServerConnectionOnIdleClient},

	{"TestCloneHash", _test.TestCloneHash},

	{"TestKeyTooSmallForRSAPSS", _test.TestKeyTooSmallForRSAPSS},

	{"TestMultipleCertificates", _test.TestMultipleCertificates},

	{"TestAESCipherReordering", _test.TestAESCipherReordering},

	{"TestAESCipherReorderingTLS13", _test.TestAESCipherReorderingTLS13},

	{"TestServerHandshakeContextCancellation", _test.TestServerHandshakeContextCancellation},

	{"TestHandshakeContextHierarchy", _test.TestHandshakeContextHierarchy},

	{"TestACVPVectors", _test.TestACVPVectors},

	{"TestTrafficKey", _test.TestTrafficKey},

	{"TestLinkerGC", _test.TestLinkerGC},

	{"TestSplitPreMasterSecret", _test.TestSplitPreMasterSecret},

	{"TestKeysFromPreMasterSecret", _test.TestKeysFromPreMasterSecret},

	{"TestQUICConnection", _test.TestQUICConnection},

	{"TestQUICSessionResumption", _test.TestQUICSessionResumption},

	{"TestQUICFragmentaryData", _test.TestQUICFragmentaryData},

	{"TestQUICPostHandshakeClientAuthentication", _test.TestQUICPostHandshakeClientAuthentication},

	{"TestQUICPostHandshakeKeyUpdate", _test.TestQUICPostHandshakeKeyUpdate},

	{"TestQUICPostHandshakeMessageTooLarge", _test.TestQUICPostHandshakeMessageTooLarge},

	{"TestQUICHandshakeError", _test.TestQUICHandshakeError},

	{"TestQUICConnectionState", _test.TestQUICConnectionState},

	{"TestQUICStartContextPropagation", _test.TestQUICStartContextPropagation},

	{"TestQUICDelayedTransportParameters", _test.TestQUICDelayedTransportParameters},

	{"TestQUICEmptyTransportParameters", _test.TestQUICEmptyTransportParameters},

	{"TestQUICCanceledWaitingForData", _test.TestQUICCanceledWaitingForData},

	{"TestQUICCanceledWaitingForTransportParams", _test.TestQUICCanceledWaitingForTransportParams},

	{"TestQUICEarlyData", _test.TestQUICEarlyData},

	{"TestQUICEarlyDataDeclined", _test.TestQUICEarlyDataDeclined},

	{"TestX509KeyPair", _test.TestX509KeyPair},

	{"TestX509KeyPairErrors", _test.TestX509KeyPairErrors},

	{"TestX509MixedKeyPair", _test.TestX509MixedKeyPair},

	{"TestDialTimeout", _test.TestDialTimeout},

	{"TestDeadlineOnWrite", _test.TestDeadlineOnWrite},

	{"TestDialer", _test.TestDialer},

	{"TestConnReadNonzeroAndEOF", _test.TestConnReadNonzeroAndEOF},

	{"TestTLSUniqueMatches", _test.TestTLSUniqueMatches},

	{"TestVerifyHostname", _test.TestVerifyHostname},

	{"TestConnCloseBreakingWrite", _test.TestConnCloseBreakingWrite},

	{"TestConnCloseWrite", _test.TestConnCloseWrite},

	{"TestWarningAlertFlood", _test.TestWarningAlertFlood},

	{"TestCloneFuncFields", _test.TestCloneFuncFields},

	{"TestCloneNonFuncFields", _test.TestCloneNonFuncFields},

	{"TestCloneNilConfig", _test.TestCloneNilConfig},

	{"TestConnectionStateMarshal", _test.TestConnectionStateMarshal},

	{"TestConnectionState", _test.TestConnectionState},

	{"TestBuildNameToCertificate_doesntModifyCertificates", _test.TestBuildNameToCertificate_doesntModifyCertificates},

	{"TestClientHelloInfo_SupportsCertificate", _test.TestClientHelloInfo_SupportsCertificate},

	{"TestCipherSuites", _test.TestCipherSuites},

	{"TestVersionName", _test.TestVersionName},

	{"TestPKCS1OnlyCert", _test.TestPKCS1OnlyCert},

	{"TestVerifyCertificates", _test.TestVerifyCertificates},

	{"TestHandshakeMLKEM", _test.TestHandshakeMLKEM},

	{"TestX509KeyPairPopulateCertificate", _test.TestX509KeyPairPopulateCertificate},

	{"TestEarlyLargeCertMsg", _test.TestEarlyLargeCertMsg},

	{"TestLargeCertMsg", _test.TestLargeCertMsg},

	{"TestECH", _test.TestECH},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkHandshakeServer", _test.BenchmarkHandshakeServer},

	{"BenchmarkThroughput", _test.BenchmarkThroughput},

	{"BenchmarkLatency", _test.BenchmarkLatency},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "crypto/tls"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_test.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

