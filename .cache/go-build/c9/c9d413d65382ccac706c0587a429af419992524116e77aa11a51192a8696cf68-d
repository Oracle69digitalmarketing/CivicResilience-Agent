
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "crypto/des"


	_xtest "crypto/des_test"

)

var tests = []testing.InternalTest{

	{"TestInitialPermute", _test.TestInitialPermute},

	{"TestFinalPermute", _test.TestFinalPermute},

	{"TestWeakKeys", _xtest.TestWeakKeys},

	{"TestSemiWeakKeyPairs", _xtest.TestSemiWeakKeyPairs},

	{"TestDESEncryptBlock", _xtest.TestDESEncryptBlock},

	{"TestDESDecryptBlock", _xtest.TestDESDecryptBlock},

	{"TestEncryptTripleDES", _xtest.TestEncryptTripleDES},

	{"TestDecryptTripleDES", _xtest.TestDecryptTripleDES},

	{"TestVariablePlaintextKnownAnswer", _xtest.TestVariablePlaintextKnownAnswer},

	{"TestVariableCiphertextKnownAnswer", _xtest.TestVariableCiphertextKnownAnswer},

	{"TestInversePermutationKnownAnswer", _xtest.TestInversePermutationKnownAnswer},

	{"TestInitialPermutationKnownAnswer", _xtest.TestInitialPermutationKnownAnswer},

	{"TestVariableKeyKnownAnswerEncrypt", _xtest.TestVariableKeyKnownAnswerEncrypt},

	{"TestVariableKeyKnownAnswerDecrypt", _xtest.TestVariableKeyKnownAnswerDecrypt},

	{"TestPermutationOperationKnownAnswerEncrypt", _xtest.TestPermutationOperationKnownAnswerEncrypt},

	{"TestPermutationOperationKnownAnswerDecrypt", _xtest.TestPermutationOperationKnownAnswerDecrypt},

	{"TestSubstitutionTableKnownAnswerEncrypt", _xtest.TestSubstitutionTableKnownAnswerEncrypt},

	{"TestSubstitutionTableKnownAnswerDecrypt", _xtest.TestSubstitutionTableKnownAnswerDecrypt},

	{"TestDESBlock", _xtest.TestDESBlock},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkEncrypt", _xtest.BenchmarkEncrypt},

	{"BenchmarkDecrypt", _xtest.BenchmarkDecrypt},

	{"BenchmarkTDESEncrypt", _xtest.BenchmarkTDESEncrypt},

	{"BenchmarkTDESDecrypt", _xtest.BenchmarkTDESDecrypt},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "crypto/des"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

