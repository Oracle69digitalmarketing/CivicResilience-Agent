
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "os/signal"


	_xtest "os/signal_test"

)

var tests = []testing.InternalTest{

	{"TestAllThreadsSyscallSignals", _test.TestAllThreadsSyscallSignals},

	{"TestSignal", _test.TestSignal},

	{"TestStress", _test.TestStress},

	{"TestReset", _test.TestReset},

	{"TestIgnore", _test.TestIgnore},

	{"TestIgnored", _test.TestIgnored},

	{"TestDetectNohup", _test.TestDetectNohup},

	{"TestStop", _test.TestStop},

	{"TestNohup", _test.TestNohup},

	{"TestSIGCONT", _test.TestSIGCONT},

	{"TestAtomicStop", _test.TestAtomicStop},

	{"TestTime", _test.TestTime},

	{"TestNotifyContextNotifications", _test.TestNotifyContextNotifications},

	{"TestNotifyContextStop", _test.TestNotifyContextStop},

	{"TestNotifyContextCancelParent", _test.TestNotifyContextCancelParent},

	{"TestNotifyContextPrematureCancelParent", _test.TestNotifyContextPrematureCancelParent},

	{"TestNotifyContextSimultaneousStop", _test.TestNotifyContextSimultaneousStop},

	{"TestNotifyContextStringer", _test.TestNotifyContextStringer},

	{"TestSignalTrace", _test.TestSignalTrace},

	{"TestTerminalSignal", _xtest.TestTerminalSignal},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleNotifyContext", _xtest.ExampleNotifyContext, "context canceled\n", false},

}

func init() {

	testdeps.ImportPath = "os/signal"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

