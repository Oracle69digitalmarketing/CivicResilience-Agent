
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "errors"


	_xtest "errors_test"

)

var tests = []testing.InternalTest{

	{"TestNewEqual", _xtest.TestNewEqual},

	{"TestErrorMethod", _xtest.TestErrorMethod},

	{"TestJoinReturnsNil", _xtest.TestJoinReturnsNil},

	{"TestJoin", _xtest.TestJoin},

	{"TestJoinErrorMethod", _xtest.TestJoinErrorMethod},

	{"TestIs", _xtest.TestIs},

	{"TestAs", _xtest.TestAs},

	{"TestAsValidation", _xtest.TestAsValidation},

	{"TestUnwrap", _xtest.TestUnwrap},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkJoin", _xtest.BenchmarkJoin},

	{"BenchmarkIs", _xtest.BenchmarkIs},

	{"BenchmarkAs", _xtest.BenchmarkAs},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"Example", _xtest.Example, "1989-03-15 22:30:00 +0000 UTC: the file system has gone away\n", false},

	{"ExampleNew", _xtest.ExampleNew, "emit macho dwarf: elf header corrupted\n", false},

	{"ExampleNew_errorf", _xtest.ExampleNew_errorf, "user \"bimmler\" (id 17) not found\n", false},

	{"ExampleJoin", _xtest.ExampleJoin, "err1\nerr2\nerr is err1\nerr is err2\n[err1 err2]\n", false},

	{"ExampleIs", _xtest.ExampleIs, "file does not exist\n", false},

	{"ExampleAs", _xtest.ExampleAs, "Failed at path: non-existing\n", false},

	{"ExampleUnwrap", _xtest.ExampleUnwrap, "error2: [error1]\nerror1\n", false},

}

func init() {

	testdeps.ImportPath = "errors"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

