
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "path"


	_xtest "path_test"

)

var tests = []testing.InternalTest{

	{"TestMatch", _xtest.TestMatch},

	{"TestClean", _xtest.TestClean},

	{"TestCleanMallocs", _xtest.TestCleanMallocs},

	{"TestSplit", _xtest.TestSplit},

	{"TestJoin", _xtest.TestJoin},

	{"TestExt", _xtest.TestExt},

	{"TestBase", _xtest.TestBase},

	{"TestDir", _xtest.TestDir},

	{"TestIsAbs", _xtest.TestIsAbs},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkJoin", _xtest.BenchmarkJoin},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleBase", _xtest.ExampleBase, "b\n/\n.\n", false},

	{"ExampleClean", _xtest.ExampleClean, "Clean(\"a/c\") = \"a/c\"\nClean(\"a//c\") = \"a/c\"\nClean(\"a/c/.\") = \"a/c\"\nClean(\"a/c/b/..\") = \"a/c\"\nClean(\"/../a/c\") = \"/a/c\"\nClean(\"/../a/b/../././/c\") = \"/a/c\"\nClean(\"\") = \".\"\n", false},

	{"ExampleDir", _xtest.ExampleDir, "/a/b\na/b\n/a\na\n/\n.\n", false},

	{"ExampleExt", _xtest.ExampleExt, ".css\n", false},

	{"ExampleIsAbs", _xtest.ExampleIsAbs, "true\n", false},

	{"ExampleJoin", _xtest.ExampleJoin, "a/b/c\na/b/c\na/b/c\n../xyz\n\na\na\n", false},

	{"ExampleMatch", _xtest.ExampleMatch, "true <nil>\ntrue <nil>\nfalse <nil>\n", false},

	{"ExampleSplit", _xtest.ExampleSplit, "path.Split(\"static/myfile.css\") = dir: \"static/\", file: \"myfile.css\"\npath.Split(\"myfile.css\") = dir: \"\", file: \"myfile.css\"\npath.Split(\"\") = dir: \"\", file: \"\"\n", false},

}

func init() {

	testdeps.ImportPath = "path"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

