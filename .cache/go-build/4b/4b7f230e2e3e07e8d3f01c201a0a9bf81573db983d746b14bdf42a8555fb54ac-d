
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "context"


	_xtest "context_test"

)

var tests = []testing.InternalTest{

	{"TestCustomContextAfterFuncCancel", _xtest.TestCustomContextAfterFuncCancel},

	{"TestCustomContextAfterFuncTimeout", _xtest.TestCustomContextAfterFuncTimeout},

	{"TestCustomContextAfterFuncAfterFunc", _xtest.TestCustomContextAfterFuncAfterFunc},

	{"TestCustomContextAfterFuncUnregisterCancel", _xtest.TestCustomContextAfterFuncUnregisterCancel},

	{"TestCustomContextAfterFuncUnregisterTimeout", _xtest.TestCustomContextAfterFuncUnregisterTimeout},

	{"TestCustomContextAfterFuncUnregisterAfterFunc", _xtest.TestCustomContextAfterFuncUnregisterAfterFunc},

	{"TestDeadlineExceededIsNetError", _xtest.TestDeadlineExceededIsNetError},

	{"TestParentFinishesChild", _xtest.TestParentFinishesChild},

	{"TestChildFinishesFirst", _xtest.TestChildFinishesFirst},

	{"TestCancelRemoves", _xtest.TestCancelRemoves},

	{"TestCustomContextGoroutines", _xtest.TestCustomContextGoroutines},

	{"TestBackground", _xtest.TestBackground},

	{"TestTODO", _xtest.TestTODO},

	{"TestWithCancel", _xtest.TestWithCancel},

	{"TestDeadline", _xtest.TestDeadline},

	{"TestTimeout", _xtest.TestTimeout},

	{"TestCanceledTimeout", _xtest.TestCanceledTimeout},

	{"TestValues", _xtest.TestValues},

	{"TestAllocs", _xtest.TestAllocs},

	{"TestSimultaneousCancels", _xtest.TestSimultaneousCancels},

	{"TestInterlockedCancels", _xtest.TestInterlockedCancels},

	{"TestLayersCancel", _xtest.TestLayersCancel},

	{"TestLayersTimeout", _xtest.TestLayersTimeout},

	{"TestWithCancelCanceledParent", _xtest.TestWithCancelCanceledParent},

	{"TestWithCancelSimultaneouslyCanceledParent", _xtest.TestWithCancelSimultaneouslyCanceledParent},

	{"TestWithValueChecksKey", _xtest.TestWithValueChecksKey},

	{"TestInvalidDerivedFail", _xtest.TestInvalidDerivedFail},

	{"TestDeadlineExceededSupportsTimeout", _xtest.TestDeadlineExceededSupportsTimeout},

	{"TestCause", _xtest.TestCause},

	{"TestCauseRace", _xtest.TestCauseRace},

	{"TestWithoutCancel", _xtest.TestWithoutCancel},

	{"TestCustomContextPropagation", _xtest.TestCustomContextPropagation},

	{"TestCustomContextCause", _xtest.TestCustomContextCause},

	{"TestAfterFuncCalledAfterCancel", _xtest.TestAfterFuncCalledAfterCancel},

	{"TestAfterFuncCalledAfterTimeout", _xtest.TestAfterFuncCalledAfterTimeout},

	{"TestAfterFuncCalledImmediately", _xtest.TestAfterFuncCalledImmediately},

	{"TestAfterFuncNotCalledAfterStop", _xtest.TestAfterFuncNotCalledAfterStop},

	{"TestAfterFuncCalledAsynchronously", _xtest.TestAfterFuncCalledAsynchronously},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkCommonParentCancel", _xtest.BenchmarkCommonParentCancel},

	{"BenchmarkWithTimeout", _xtest.BenchmarkWithTimeout},

	{"BenchmarkCancelTree", _xtest.BenchmarkCancelTree},

	{"BenchmarkCheckCanceled", _xtest.BenchmarkCheckCanceled},

	{"BenchmarkContextCancelDone", _xtest.BenchmarkContextCancelDone},

	{"BenchmarkDeepValueNewGoRoutine", _xtest.BenchmarkDeepValueNewGoRoutine},

	{"BenchmarkDeepValueSameGoRoutine", _xtest.BenchmarkDeepValueSameGoRoutine},

	{"BenchmarkErrOK", _xtest.BenchmarkErrOK},

	{"BenchmarkErrCanceled", _xtest.BenchmarkErrCanceled},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleWithCancel", _xtest.ExampleWithCancel, "1\n2\n3\n4\n5\n", false},

	{"ExampleWithDeadline", _xtest.ExampleWithDeadline, "context deadline exceeded\n", false},

	{"ExampleWithTimeout", _xtest.ExampleWithTimeout, "context deadline exceeded\n", false},

	{"ExampleWithValue", _xtest.ExampleWithValue, "found value: Go\nkey not found: color\n", false},

	{"ExampleAfterFunc_cond", _xtest.ExampleAfterFunc_cond, "context deadline exceeded\ncontext deadline exceeded\ncontext deadline exceeded\ncontext deadline exceeded\n", false},

	{"ExampleAfterFunc_connection", _xtest.ExampleAfterFunc_connection, "context deadline exceeded\n", false},

	{"ExampleAfterFunc_merge", _xtest.ExampleAfterFunc_merge, "ctx2 canceled\n", false},

}

func init() {

	testdeps.ImportPath = "context"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

