
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"reflect"

	"testing"
	"testing/internal/testdeps"



	_ "os"


	_xtest "os_test"

)

var tests = []testing.InternalTest{

	{"TestLargeCopyViaNetwork", _xtest.TestLargeCopyViaNetwork},

	{"TestCopyFileToFile", _xtest.TestCopyFileToFile},

	{"TestExpand", _xtest.TestExpand},

	{"TestConsistentEnviron", _xtest.TestConsistentEnviron},

	{"TestUnsetenv", _xtest.TestUnsetenv},

	{"TestClearenv", _xtest.TestClearenv},

	{"TestLookupEnv", _xtest.TestLookupEnv},

	{"TestEnvironConsistency", _xtest.TestEnvironConsistency},

	{"TestSetenvUnixEinval", _xtest.TestSetenvUnixEinval},

	{"TestExpandEnvShellSpecialVar", _xtest.TestExpandEnvShellSpecialVar},

	{"TestErrIsExist", _xtest.TestErrIsExist},

	{"TestErrIsNotExist", _xtest.TestErrIsNotExist},

	{"TestIsExist", _xtest.TestIsExist},

	{"TestIsPermission", _xtest.TestIsPermission},

	{"TestErrPathNUL", _xtest.TestErrPathNUL},

	{"TestPathErrorUnwrap", _xtest.TestPathErrorUnwrap},

	{"TestErrorIsMethods", _xtest.TestErrorIsMethods},

	{"TestProcessLiteral", _xtest.TestProcessLiteral},

	{"TestProcessReleaseTwice", _xtest.TestProcessReleaseTwice},

	{"TestErrProcessDone", _xtest.TestErrProcessDone},

	{"TestProcessAlreadyDone", _xtest.TestProcessAlreadyDone},

	{"TestUNIXProcessAlive", _xtest.TestUNIXProcessAlive},

	{"TestProcessBadPID", _xtest.TestProcessBadPID},

	{"TestExecutable", _xtest.TestExecutable},

	{"TestExecutableDeleted", _xtest.TestExecutableDeleted},

	{"TestFifoEOF", _xtest.TestFifoEOF},

	{"TestNonPollable", _xtest.TestNonPollable},

	{"TestOpenFileNonBlocking", _xtest.TestOpenFileNonBlocking},

	{"TestNewFileNonBlocking", _xtest.TestNewFileNonBlocking},

	{"TestFIFONonBlockingEOF", _xtest.TestFIFONonBlockingEOF},

	{"TestDirFSReadLink", _xtest.TestDirFSReadLink},

	{"TestDirFSLstat", _xtest.TestDirFSLstat},

	{"TestDirFSWalkDir", _xtest.TestDirFSWalkDir},

	{"TestGetwdDeep", _xtest.TestGetwdDeep},

	{"TestGetwdDeepWithPWDSet", _xtest.TestGetwdDeepWithPWDSet},

	{"TestStat", _xtest.TestStat},

	{"TestStatError", _xtest.TestStatError},

	{"TestStatSymlinkLoop", _xtest.TestStatSymlinkLoop},

	{"TestFstat", _xtest.TestFstat},

	{"TestLstat", _xtest.TestLstat},

	{"TestRead0", _xtest.TestRead0},

	{"TestReadClosed", _xtest.TestReadClosed},

	{"TestFileReaddirnames", _xtest.TestFileReaddirnames},

	{"TestFileReaddir", _xtest.TestFileReaddir},

	{"TestFileReadDir", _xtest.TestFileReadDir},

	{"TestReaddirnamesOneAtATime", _xtest.TestReaddirnamesOneAtATime},

	{"TestReaddirNValues", _xtest.TestReaddirNValues},

	{"TestReaddirStatFailures", _xtest.TestReaddirStatFailures},

	{"TestReaddirOfFile", _xtest.TestReaddirOfFile},

	{"TestHardLink", _xtest.TestHardLink},

	{"TestSymlink", _xtest.TestSymlink},

	{"TestLongSymlink", _xtest.TestLongSymlink},

	{"TestRename", _xtest.TestRename},

	{"TestRenameOverwriteDest", _xtest.TestRenameOverwriteDest},

	{"TestRenameFailed", _xtest.TestRenameFailed},

	{"TestRenameNotExisting", _xtest.TestRenameNotExisting},

	{"TestRenameToDirFailed", _xtest.TestRenameToDirFailed},

	{"TestRenameCaseDifference", _xtest.TestRenameCaseDifference},

	{"TestStartProcess", _xtest.TestStartProcess},

	{"TestChmod", _xtest.TestChmod},

	{"TestFTruncate", _xtest.TestFTruncate},

	{"TestTruncate", _xtest.TestTruncate},

	{"TestTruncateNonexistentFile", _xtest.TestTruncateNonexistentFile},

	{"TestChtimes", _xtest.TestChtimes},

	{"TestChtimesOmit", _xtest.TestChtimesOmit},

	{"TestChtimesDir", _xtest.TestChtimesDir},

	{"TestChtimesToUnixZero", _xtest.TestChtimesToUnixZero},

	{"TestFileChdir", _xtest.TestFileChdir},

	{"TestChdirAndGetwd", _xtest.TestChdirAndGetwd},

	{"TestProgWideChdir", _xtest.TestProgWideChdir},

	{"TestSeek", _xtest.TestSeek},

	{"TestSeekError", _xtest.TestSeekError},

	{"TestOpenError", _xtest.TestOpenError},

	{"TestOpenNoName", _xtest.TestOpenNoName},

	{"TestHostname", _xtest.TestHostname},

	{"TestReadAt", _xtest.TestReadAt},

	{"TestReadAtOffset", _xtest.TestReadAtOffset},

	{"TestReadAtNegativeOffset", _xtest.TestReadAtNegativeOffset},

	{"TestWriteAt", _xtest.TestWriteAt},

	{"TestWriteAtConcurrent", _xtest.TestWriteAtConcurrent},

	{"TestWriteAtNegativeOffset", _xtest.TestWriteAtNegativeOffset},

	{"TestWriteAtInAppendMode", _xtest.TestWriteAtInAppendMode},

	{"TestAppend", _xtest.TestAppend},

	{"TestFilePermissions", _xtest.TestFilePermissions},

	{"TestOpenFileCreateExclDanglingSymlink", _xtest.TestOpenFileCreateExclDanglingSymlink},

	{"TestFileRDWRFlags", _xtest.TestFileRDWRFlags},

	{"TestStatDirWithTrailingSlash", _xtest.TestStatDirWithTrailingSlash},

	{"TestNilProcessStateString", _xtest.TestNilProcessStateString},

	{"TestSameFile", _xtest.TestSameFile},

	{"TestDevNullFile", _xtest.TestDevNullFile},

	{"TestLargeWriteToConsole", _xtest.TestLargeWriteToConsole},

	{"TestStatDirModeExec", _xtest.TestStatDirModeExec},

	{"TestStatStdin", _xtest.TestStatStdin},

	{"TestStatRelativeSymlink", _xtest.TestStatRelativeSymlink},

	{"TestReadAtEOF", _xtest.TestReadAtEOF},

	{"TestLongPath", _xtest.TestLongPath},

	{"TestKillStartProcess", _xtest.TestKillStartProcess},

	{"TestGetppid", _xtest.TestGetppid},

	{"TestKillFindProcess", _xtest.TestKillFindProcess},

	{"TestNilFileMethods", _xtest.TestNilFileMethods},

	{"TestRemoveAllRace", _xtest.TestRemoveAllRace},

	{"TestPipeThreads", _xtest.TestPipeThreads},

	{"TestDoubleCloseError", _xtest.TestDoubleCloseError},

	{"TestUserCacheDir", _xtest.TestUserCacheDir},

	{"TestUserCacheDirXDGConfigDirEnvVar", _xtest.TestUserCacheDirXDGConfigDirEnvVar},

	{"TestUserConfigDir", _xtest.TestUserConfigDir},

	{"TestUserConfigDirXDGConfigDirEnvVar", _xtest.TestUserConfigDirXDGConfigDirEnvVar},

	{"TestUserHomeDir", _xtest.TestUserHomeDir},

	{"TestDirSeek", _xtest.TestDirSeek},

	{"TestReaddirSmallSeek", _xtest.TestReaddirSmallSeek},

	{"TestOpenFileKeepsPermissions", _xtest.TestOpenFileKeepsPermissions},

	{"TestDirFS", _xtest.TestDirFS},

	{"TestRootDirFS", _xtest.TestRootDirFS},

	{"TestDirFSRootDir", _xtest.TestDirFSRootDir},

	{"TestDirFSEmptyDir", _xtest.TestDirFSEmptyDir},

	{"TestDirFSPathsValid", _xtest.TestDirFSPathsValid},

	{"TestReadFileProc", _xtest.TestReadFileProc},

	{"TestDirFSReadFileProc", _xtest.TestDirFSReadFileProc},

	{"TestWriteStringAlloc", _xtest.TestWriteStringAlloc},

	{"TestPipeIOCloseRace", _xtest.TestPipeIOCloseRace},

	{"TestPipeCloseRace", _xtest.TestPipeCloseRace},

	{"TestRandomLen", _xtest.TestRandomLen},

	{"TestCopyFS", _xtest.TestCopyFS},

	{"TestCopyFSWithSymlinks", _xtest.TestCopyFSWithSymlinks},

	{"TestAppendDoesntOverwrite", _xtest.TestAppendDoesntOverwrite},

	{"TestRemoveReadOnlyFile", _xtest.TestRemoveReadOnlyFile},

	{"TestOpenFileDevNull", _xtest.TestOpenFileDevNull},

	{"TestReadFileContents", _xtest.TestReadFileContents},

	{"TestChown", _xtest.TestChown},

	{"TestFileChown", _xtest.TestFileChown},

	{"TestLchown", _xtest.TestLchown},

	{"TestReaddirRemoveRace", _xtest.TestReaddirRemoveRace},

	{"TestMkdirStickyUmask", _xtest.TestMkdirStickyUmask},

	{"TestNewFileBlock", _xtest.TestNewFileBlock},

	{"TestNewFileNonBlock", _xtest.TestNewFileNonBlock},

	{"TestNewFileInvalid", _xtest.TestNewFileInvalid},

	{"TestSplitPath", _xtest.TestSplitPath},

	{"TestIssue60181", _xtest.TestIssue60181},

	{"TestMkdirAll", _xtest.TestMkdirAll},

	{"TestMkdirAllAbsPath", _xtest.TestMkdirAllAbsPath},

	{"TestMkdirAllWithSymlink", _xtest.TestMkdirAllWithSymlink},

	{"TestMkdirAllAtSlash", _xtest.TestMkdirAllAtSlash},

	{"TestFindProcessViaPidfd", _xtest.TestFindProcessViaPidfd},

	{"TestStartProcessWithPidfd", _xtest.TestStartProcessWithPidfd},

	{"TestPidfdLeak", _xtest.TestPidfdLeak},

	{"TestEPIPE", _xtest.TestEPIPE},

	{"TestStdPipe", _xtest.TestStdPipe},

	{"TestClosedPipeRaceRead", _xtest.TestClosedPipeRaceRead},

	{"TestClosedPipeRaceWrite", _xtest.TestClosedPipeRaceWrite},

	{"TestReadNonblockingFd", _xtest.TestReadNonblockingFd},

	{"TestCloseWithBlockingReadByNewFile", _xtest.TestCloseWithBlockingReadByNewFile},

	{"TestCloseWithBlockingReadByFd", _xtest.TestCloseWithBlockingReadByFd},

	{"TestPipeEOF", _xtest.TestPipeEOF},

	{"TestFdRace", _xtest.TestFdRace},

	{"TestFdReadRace", _xtest.TestFdReadRace},

	{"TestRawConnReadWrite", _xtest.TestRawConnReadWrite},

	{"TestReadFile", _xtest.TestReadFile},

	{"TestWriteFile", _xtest.TestWriteFile},

	{"TestReadOnlyWriteFile", _xtest.TestReadOnlyWriteFile},

	{"TestReadDir", _xtest.TestReadDir},

	{"TestSpliceFile", _xtest.TestSpliceFile},

	{"TestProcCopy", _xtest.TestProcCopy},

	{"TestGetPollFDAndNetwork", _xtest.TestGetPollFDAndNetwork},

	{"TestCopyFile", _xtest.TestCopyFile},

	{"TestRemoveAll", _xtest.TestRemoveAll},

	{"TestRemoveAllLarge", _xtest.TestRemoveAllLarge},

	{"TestRemoveAllLongPath", _xtest.TestRemoveAllLongPath},

	{"TestRemoveAllDot", _xtest.TestRemoveAllDot},

	{"TestRemoveAllDotDot", _xtest.TestRemoveAllDotDot},

	{"TestRemoveReadOnlyDir", _xtest.TestRemoveReadOnlyDir},

	{"TestRemoveAllButReadOnlyAndPathError", _xtest.TestRemoveAllButReadOnlyAndPathError},

	{"TestRemoveUnreadableDir", _xtest.TestRemoveUnreadableDir},

	{"TestRemoveAllWithMoreErrorThanReqSize", _xtest.TestRemoveAllWithMoreErrorThanReqSize},

	{"TestRemoveAllNoFcntl", _xtest.TestRemoveAllNoFcntl},

	{"TestRemoveAllTrailingSlash", _xtest.TestRemoveAllTrailingSlash},

	{"TestRootOpen_File", _xtest.TestRootOpen_File},

	{"TestRootOpen_Directory", _xtest.TestRootOpen_Directory},

	{"TestRootCreate", _xtest.TestRootCreate},

	{"TestRootChmod", _xtest.TestRootChmod},

	{"TestRootChtimes", _xtest.TestRootChtimes},

	{"TestRootMkdir", _xtest.TestRootMkdir},

	{"TestRootMkdirAll", _xtest.TestRootMkdirAll},

	{"TestRootOpenRoot", _xtest.TestRootOpenRoot},

	{"TestRootRemoveFile", _xtest.TestRootRemoveFile},

	{"TestRootRemoveDirectory", _xtest.TestRootRemoveDirectory},

	{"TestRootRemoveAll", _xtest.TestRootRemoveAll},

	{"TestRootOpenFileAsRoot", _xtest.TestRootOpenFileAsRoot},

	{"TestRootStat", _xtest.TestRootStat},

	{"TestRootLstat", _xtest.TestRootLstat},

	{"TestRootReadlink", _xtest.TestRootReadlink},

	{"TestRootRenameFrom", _xtest.TestRootRenameFrom},

	{"TestRootLinkFrom", _xtest.TestRootLinkFrom},

	{"TestRootRenameTo", _xtest.TestRootRenameTo},

	{"TestRootLinkTo", _xtest.TestRootLinkTo},

	{"TestRootSymlink", _xtest.TestRootSymlink},

	{"TestRootConsistencyOpen", _xtest.TestRootConsistencyOpen},

	{"TestRootConsistencyCreate", _xtest.TestRootConsistencyCreate},

	{"TestRootConsistencyChmod", _xtest.TestRootConsistencyChmod},

	{"TestRootConsistencyMkdir", _xtest.TestRootConsistencyMkdir},

	{"TestRootConsistencyMkdirAll", _xtest.TestRootConsistencyMkdirAll},

	{"TestRootConsistencyRemove", _xtest.TestRootConsistencyRemove},

	{"TestRootConsistencyRemoveAll", _xtest.TestRootConsistencyRemoveAll},

	{"TestRootConsistencyStat", _xtest.TestRootConsistencyStat},

	{"TestRootConsistencyLstat", _xtest.TestRootConsistencyLstat},

	{"TestRootConsistencyReadlink", _xtest.TestRootConsistencyReadlink},

	{"TestRootConsistencyRename", _xtest.TestRootConsistencyRename},

	{"TestRootConsistencyLink", _xtest.TestRootConsistencyLink},

	{"TestRootConsistencySymlink", _xtest.TestRootConsistencySymlink},

	{"TestRootRenameAfterOpen", _xtest.TestRootRenameAfterOpen},

	{"TestRootNonPermissionMode", _xtest.TestRootNonPermissionMode},

	{"TestRootUseAfterClose", _xtest.TestRootUseAfterClose},

	{"TestRootConcurrentClose", _xtest.TestRootConcurrentClose},

	{"TestRootRaceRenameDir", _xtest.TestRootRaceRenameDir},

	{"TestRootSymlinkToRoot", _xtest.TestRootSymlinkToRoot},

	{"TestOpenInRoot", _xtest.TestOpenInRoot},

	{"TestRootRemoveDot", _xtest.TestRootRemoveDot},

	{"TestRootWriteReadFile", _xtest.TestRootWriteReadFile},

	{"TestRootChown", _xtest.TestRootChown},

	{"TestRootLchown", _xtest.TestRootLchown},

	{"TestRootConsistencyChown", _xtest.TestRootConsistencyChown},

	{"TestRootConsistencyLchown", _xtest.TestRootConsistencyLchown},

	{"TestDirAndSymlinkStats", _xtest.TestDirAndSymlinkStats},

	{"TestFileAndSymlinkStats", _xtest.TestFileAndSymlinkStats},

	{"TestSymlinkWithTrailingSlash", _xtest.TestSymlinkWithTrailingSlash},

	{"TestStatConsole", _xtest.TestStatConsole},

	{"TestClosedStat", _xtest.TestClosedStat},

	{"TestStatNotExist", _xtest.TestStatNotExist},

	{"TestCreateTemp", _xtest.TestCreateTemp},

	{"TestCreateTempPattern", _xtest.TestCreateTempPattern},

	{"TestCreateTempBadPattern", _xtest.TestCreateTempBadPattern},

	{"TestMkdirTemp", _xtest.TestMkdirTemp},

	{"TestMkdirTempBadDir", _xtest.TestMkdirTempBadDir},

	{"TestMkdirTempBadPattern", _xtest.TestMkdirTempBadPattern},

	{"TestNonpollableDeadline", _xtest.TestNonpollableDeadline},

	{"TestReadTimeout", _xtest.TestReadTimeout},

	{"TestReadTimeoutMustNotReturn", _xtest.TestReadTimeoutMustNotReturn},

	{"TestWriteTimeout", _xtest.TestWriteTimeout},

	{"TestWriteTimeoutMustNotReturn", _xtest.TestWriteTimeoutMustNotReturn},

	{"TestReadTimeoutFluctuation", _xtest.TestReadTimeoutFluctuation},

	{"TestWriteTimeoutFluctuation", _xtest.TestWriteTimeoutFluctuation},

	{"TestVariousDeadlines", _xtest.TestVariousDeadlines},

	{"TestVariousDeadlines1Proc", _xtest.TestVariousDeadlines1Proc},

	{"TestVariousDeadlines4Proc", _xtest.TestVariousDeadlines4Proc},

	{"TestReadWriteDeadlineRace", _xtest.TestReadWriteDeadlineRace},

	{"TestRacyRead", _xtest.TestRacyRead},

	{"TestRacyWrite", _xtest.TestRacyWrite},

	{"TestTTYClose", _xtest.TestTTYClose},

	{"TestSendFile", _xtest.TestSendFile},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkExpand", _xtest.BenchmarkExpand},

	{"BenchmarkReaddirname", _xtest.BenchmarkReaddirname},

	{"BenchmarkReaddir", _xtest.BenchmarkReaddir},

	{"BenchmarkReadDir", _xtest.BenchmarkReadDir},

	{"BenchmarkStatDot", _xtest.BenchmarkStatDot},

	{"BenchmarkStatFile", _xtest.BenchmarkStatFile},

	{"BenchmarkStatDir", _xtest.BenchmarkStatDir},

	{"BenchmarkLstatDot", _xtest.BenchmarkLstatDot},

	{"BenchmarkLstatFile", _xtest.BenchmarkLstatFile},

	{"BenchmarkLstatDir", _xtest.BenchmarkLstatDir},

	{"BenchmarkRemoveAll", _xtest.BenchmarkRemoveAll},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleErrNotExist", _xtest.ExampleErrNotExist, "file does not exist\n", false},

	{"ExampleExpand", _xtest.ExampleExpand, "Good morning, Gopher!\n", false},

	{"ExampleExpandEnv", _xtest.ExampleExpandEnv, "gopher lives in /usr/gopher.\n", false},

	{"ExampleLookupEnv", _xtest.ExampleLookupEnv, "SOME_KEY=value\nEMPTY_KEY=\nMISSING_KEY not set\n", false},

	{"ExampleGetenv", _xtest.ExampleGetenv, "gopher lives in /usr/gopher.\n", false},

	{"ExampleReadFile", _xtest.ExampleReadFile, "Hello, Gophers!\n", false},

	{"ExampleReadlink", _xtest.ExampleReadlink, "hello.link links to hello.txt\n", false},

	{"ExampleUserCacheDir", _xtest.ExampleUserCacheDir, "", false},

	{"ExampleUserConfigDir", _xtest.ExampleUserConfigDir, "", false},

}

func init() {

	testdeps.ImportPath = "os"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	_xtest.TestMain(m)
	os.Exit(int(reflect.ValueOf(m).Elem().FieldByName("exitCode").Int()))

}

