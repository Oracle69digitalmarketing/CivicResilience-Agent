
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "go/printer"


	_xtest "go/printer_test"

)

var tests = []testing.InternalTest{

	{"TestFiles", _test.TestFiles},

	{"TestLineComments", _test.TestLineComments},

	{"TestBadNodes", _test.TestBadNodes},

	{"TestBadComments", _test.TestBadComments},

	{"TestSourcePos", _test.TestSourcePos},

	{"TestIssue5945", _test.TestIssue5945},

	{"TestDeclLists", _test.TestDeclLists},

	{"TestStmtLists", _test.TestStmtLists},

	{"TestBaseIndent", _test.TestBaseIndent},

	{"TestFuncType", _test.TestFuncType},

	{"TestChanType", _test.TestChanType},

	{"TestWriteErrors", _test.TestWriteErrors},

	{"TestX", _test.TestX},

	{"TestCommentedNode", _test.TestCommentedNode},

	{"TestIssue11151", _test.TestIssue11151},

	{"TestParenthesizedDecl", _test.TestParenthesizedDecl},

	{"TestIssue32854", _test.TestIssue32854},

	{"TestSourcePosNewline", _test.TestSourcePosNewline},

	{"TestEmptyDecl", _test.TestEmptyDecl},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkPrintFile", _test.BenchmarkPrintFile},

	{"BenchmarkPrintDecl", _test.BenchmarkPrintDecl},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleFprint", _xtest.ExampleFprint, "funcAST, fset := parseFunc(\"example_test.go\", \"printSelf\")\n\nvar buf bytes.Buffer\nprinter.Fprint(&buf, fset, funcAST.Body)\n\ns := buf.String()\ns = s[1 : len(s)-1]\ns = strings.TrimSpace(strings.ReplaceAll(s, \"\\n\\t\", \"\\n\"))\n\nfmt.Println(s)\n", false},

}

func init() {

	testdeps.ImportPath = "go/printer"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

