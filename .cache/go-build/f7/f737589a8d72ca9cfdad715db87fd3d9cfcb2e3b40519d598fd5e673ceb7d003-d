
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_test "crypto/internal/fips140/bigmod"


)

var tests = []testing.InternalTest{

	{"TestModAddCommutative", _test.TestModAddCommutative},

	{"TestModSubThenAddIdentity", _test.TestModSubThenAddIdentity},

	{"TestMontgomeryRoundtrip", _test.TestMontgomeryRoundtrip},

	{"TestShiftIn", _test.TestShiftIn},

	{"TestModulusAndNatSizes", _test.TestModulusAndNatSizes},

	{"TestSetBytes", _test.TestSetBytes},

	{"TestExpand", _test.TestExpand},

	{"TestMod", _test.TestMod},

	{"TestModSub", _test.TestModSub},

	{"TestModAdd", _test.TestModAdd},

	{"TestExp", _test.TestExp},

	{"TestExpShort", _test.TestExpShort},

	{"TestMulReductions", _test.TestMulReductions},

	{"TestMul", _test.TestMul},

	{"TestIs", _test.TestIs},

	{"TestTrailingZeroBits", _test.TestTrailingZeroBits},

	{"TestRightShift", _test.TestRightShift},

	{"TestNewModulus", _test.TestNewModulus},

	{"TestAddMulVVWSized", _test.TestAddMulVVWSized},

	{"TestInverse", _test.TestInverse},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkModAdd", _test.BenchmarkModAdd},

	{"BenchmarkModSub", _test.BenchmarkModSub},

	{"BenchmarkMontgomeryRepr", _test.BenchmarkMontgomeryRepr},

	{"BenchmarkMontgomeryMul", _test.BenchmarkMontgomeryMul},

	{"BenchmarkModMul", _test.BenchmarkModMul},

	{"BenchmarkExpBig", _test.BenchmarkExpBig},

	{"BenchmarkExp", _test.BenchmarkExp},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

}

func init() {

	testdeps.ImportPath = "crypto/internal/fips140/bigmod"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

