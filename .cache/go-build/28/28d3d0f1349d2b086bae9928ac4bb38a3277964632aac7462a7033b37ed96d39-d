
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"



	_ "reflect"


	_xtest "reflect_test"

)

var tests = []testing.InternalTest{

	{"TestMethodValueCallABI", _xtest.TestMethodValueCallABI},

	{"TestReflectCallABI", _xtest.TestReflectCallABI},

	{"TestReflectMakeFuncCallABI", _xtest.TestReflectMakeFuncCallABI},

	{"TestSignalingNaNArgument", _xtest.TestSignalingNaNArgument},

	{"TestSignalingNaNReturn", _xtest.TestSignalingNaNReturn},

	{"TestBool", _xtest.TestBool},

	{"TestTypes", _xtest.TestTypes},

	{"TestSet", _xtest.TestSet},

	{"TestSetValue", _xtest.TestSetValue},

	{"TestMapIterSet", _xtest.TestMapIterSet},

	{"TestCanIntUintFloatComplex", _xtest.TestCanIntUintFloatComplex},

	{"TestCanSetField", _xtest.TestCanSetField},

	{"TestValueToString", _xtest.TestValueToString},

	{"TestArrayElemSet", _xtest.TestArrayElemSet},

	{"TestPtrPointTo", _xtest.TestPtrPointTo},

	{"TestPtrSetNil", _xtest.TestPtrSetNil},

	{"TestMapSetNil", _xtest.TestMapSetNil},

	{"TestAll", _xtest.TestAll},

	{"TestInterfaceGet", _xtest.TestInterfaceGet},

	{"TestInterfaceValue", _xtest.TestInterfaceValue},

	{"TestFunctionValue", _xtest.TestFunctionValue},

	{"TestGrow", _xtest.TestGrow},

	{"TestAppend", _xtest.TestAppend},

	{"TestCopy", _xtest.TestCopy},

	{"TestCopyString", _xtest.TestCopyString},

	{"TestCopyArray", _xtest.TestCopyArray},

	{"TestBigUnnamedStruct", _xtest.TestBigUnnamedStruct},

	{"TestBigStruct", _xtest.TestBigStruct},

	{"TestDeepEqual", _xtest.TestDeepEqual},

	{"TestTypeOf", _xtest.TestTypeOf},

	{"TestDeepEqualRecursiveStruct", _xtest.TestDeepEqualRecursiveStruct},

	{"TestDeepEqualComplexStruct", _xtest.TestDeepEqualComplexStruct},

	{"TestDeepEqualComplexStructInequality", _xtest.TestDeepEqualComplexStructInequality},

	{"TestDeepEqualUnexportedMap", _xtest.TestDeepEqualUnexportedMap},

	{"TestDeepEqualAllocs", _xtest.TestDeepEqualAllocs},

	{"TestAlignment", _xtest.TestAlignment},

	{"TestIsNil", _xtest.TestIsNil},

	{"TestIsZero", _xtest.TestIsZero},

	{"TestInternalIsZero", _xtest.TestInternalIsZero},

	{"TestInterfaceExtraction", _xtest.TestInterfaceExtraction},

	{"TestNilPtrValueSub", _xtest.TestNilPtrValueSub},

	{"TestMap", _xtest.TestMap},

	{"TestNilMap", _xtest.TestNilMap},

	{"TestChan", _xtest.TestChan},

	{"TestSelect", _xtest.TestSelect},

	{"TestSelectMaxCases", _xtest.TestSelectMaxCases},

	{"TestSelectNop", _xtest.TestSelectNop},

	{"TestFunc", _xtest.TestFunc},

	{"TestCallConvert", _xtest.TestCallConvert},

	{"TestCallWithStruct", _xtest.TestCallWithStruct},

	{"TestCallReturnsEmpty", _xtest.TestCallReturnsEmpty},

	{"TestMakeFunc", _xtest.TestMakeFunc},

	{"TestMakeFuncInterface", _xtest.TestMakeFuncInterface},

	{"TestMakeFuncVariadic", _xtest.TestMakeFuncVariadic},

	{"TestMakeFuncValidReturnAssignments", _xtest.TestMakeFuncValidReturnAssignments},

	{"TestMakeFuncInvalidReturnAssignments", _xtest.TestMakeFuncInvalidReturnAssignments},

	{"TestMethod", _xtest.TestMethod},

	{"TestMethodValue", _xtest.TestMethodValue},

	{"TestVariadicMethodValue", _xtest.TestVariadicMethodValue},

	{"TestDirectIfaceMethod", _xtest.TestDirectIfaceMethod},

	{"TestMethod5", _xtest.TestMethod5},

	{"TestInterfaceSet", _xtest.TestInterfaceSet},

	{"TestAnonymousFields", _xtest.TestAnonymousFields},

	{"TestFieldByIndex", _xtest.TestFieldByIndex},

	{"TestFieldByName", _xtest.TestFieldByName},

	{"TestImportPath", _xtest.TestImportPath},

	{"TestFieldPkgPath", _xtest.TestFieldPkgPath},

	{"TestMethodPkgPath", _xtest.TestMethodPkgPath},

	{"TestVariadicType", _xtest.TestVariadicType},

	{"TestNestedMethods", _xtest.TestNestedMethods},

	{"TestUnexportedMethods", _xtest.TestUnexportedMethods},

	{"TestEmbeddedMethods", _xtest.TestEmbeddedMethods},

	{"TestNumMethodOnDDD", _xtest.TestNumMethodOnDDD},

	{"TestPtrTo", _xtest.TestPtrTo},

	{"TestPtrToGC", _xtest.TestPtrToGC},

	{"TestAddr", _xtest.TestAddr},

	{"TestAllocations", _xtest.TestAllocations},

	{"TestSmallNegativeInt", _xtest.TestSmallNegativeInt},

	{"TestIndex", _xtest.TestIndex},

	{"TestSlice", _xtest.TestSlice},

	{"TestSlice3", _xtest.TestSlice3},

	{"TestSetLenCap", _xtest.TestSetLenCap},

	{"TestVariadic", _xtest.TestVariadic},

	{"TestFuncArg", _xtest.TestFuncArg},

	{"TestStructArg", _xtest.TestStructArg},

	{"TestTagGet", _xtest.TestTagGet},

	{"TestBytes", _xtest.TestBytes},

	{"TestSetBytes", _xtest.TestSetBytes},

	{"TestUnexported", _xtest.TestUnexported},

	{"TestSetPanic", _xtest.TestSetPanic},

	{"TestCallPanic", _xtest.TestCallPanic},

	{"TestValuePanic", _xtest.TestValuePanic},

	{"TestAlias", _xtest.TestAlias},

	{"TestConvert", _xtest.TestConvert},

	{"TestConvertPanic", _xtest.TestConvertPanic},

	{"TestConvertSlice2Array", _xtest.TestConvertSlice2Array},

	{"TestConvertNaNs", _xtest.TestConvertNaNs},

	{"TestComparable", _xtest.TestComparable},

	{"TestValueOverflow", _xtest.TestValueOverflow},

	{"TestTypeOverflow", _xtest.TestTypeOverflow},

	{"TestArrayOf", _xtest.TestArrayOf},

	{"TestArrayOfGC", _xtest.TestArrayOfGC},

	{"TestArrayOfAlg", _xtest.TestArrayOfAlg},

	{"TestArrayOfGenericAlg", _xtest.TestArrayOfGenericAlg},

	{"TestArrayOfDirectIface", _xtest.TestArrayOfDirectIface},

	{"TestArrayOfPanicOnNegativeLength", _xtest.TestArrayOfPanicOnNegativeLength},

	{"TestSliceOf", _xtest.TestSliceOf},

	{"TestSliceOverflow", _xtest.TestSliceOverflow},

	{"TestSliceOfGC", _xtest.TestSliceOfGC},

	{"TestStructOfFieldName", _xtest.TestStructOfFieldName},

	{"TestStructOf", _xtest.TestStructOf},

	{"TestStructOfExportRules", _xtest.TestStructOfExportRules},

	{"TestStructOfGC", _xtest.TestStructOfGC},

	{"TestStructOfAlg", _xtest.TestStructOfAlg},

	{"TestStructOfGenericAlg", _xtest.TestStructOfGenericAlg},

	{"TestStructOfDirectIface", _xtest.TestStructOfDirectIface},

	{"TestStructOfWithInterface", _xtest.TestStructOfWithInterface},

	{"TestStructOfTooManyFields", _xtest.TestStructOfTooManyFields},

	{"TestStructOfDifferentPkgPath", _xtest.TestStructOfDifferentPkgPath},

	{"TestStructOfTooLarge", _xtest.TestStructOfTooLarge},

	{"TestStructOfAnonymous", _xtest.TestStructOfAnonymous},

	{"TestChanOf", _xtest.TestChanOf},

	{"TestChanOfDir", _xtest.TestChanOfDir},

	{"TestChanOfGC", _xtest.TestChanOfGC},

	{"TestMapOf", _xtest.TestMapOf},

	{"TestMapOfGCKeys", _xtest.TestMapOfGCKeys},

	{"TestMapOfGCBigKey", _xtest.TestMapOfGCBigKey},

	{"TestMapOfGCValues", _xtest.TestMapOfGCValues},

	{"TestTypelinksSorted", _xtest.TestTypelinksSorted},

	{"TestFuncOf", _xtest.TestFuncOf},

	{"TestEmbed", _xtest.TestEmbed},

	{"TestAllocsInterfaceBig", _xtest.TestAllocsInterfaceBig},

	{"TestAllocsInterfaceSmall", _xtest.TestAllocsInterfaceSmall},

	{"TestReflectFuncTraceback", _xtest.TestReflectFuncTraceback},

	{"TestReflectMethodTraceback", _xtest.TestReflectMethodTraceback},

	{"TestSmallZero", _xtest.TestSmallZero},

	{"TestBigZero", _xtest.TestBigZero},

	{"TestZeroSet", _xtest.TestZeroSet},

	{"TestFieldByIndexNil", _xtest.TestFieldByIndexNil},

	{"TestCallMethodJump", _xtest.TestCallMethodJump},

	{"TestCallArgLive", _xtest.TestCallArgLive},

	{"TestMakeFuncStackCopy", _xtest.TestMakeFuncStackCopy},

	{"TestValueString", _xtest.TestValueString},

	{"TestInvalid", _xtest.TestInvalid},

	{"TestLarge", _xtest.TestLarge},

	{"TestTypeFieldOutOfRangePanic", _xtest.TestTypeFieldOutOfRangePanic},

	{"TestTypeFieldReadOnly", _xtest.TestTypeFieldReadOnly},

	{"TestCallGC", _xtest.TestCallGC},

	{"TestKeepFuncLive", _xtest.TestKeepFuncLive},

	{"TestMethodByNameUnExportedFirst", _xtest.TestMethodByNameUnExportedFirst},

	{"TestKeepMethodLive", _xtest.TestKeepMethodLive},

	{"TestFuncLayout", _xtest.TestFuncLayout},

	{"TestGCBits", _xtest.TestGCBits},

	{"TestTypeOfTypeOf", _xtest.TestTypeOfTypeOf},

	{"TestPtrToMethods", _xtest.TestPtrToMethods},

	{"TestMapAlloc", _xtest.TestMapAlloc},

	{"TestChanAlloc", _xtest.TestChanAlloc},

	{"TestNames", _xtest.TestNames},

	{"TestExported", _xtest.TestExported},

	{"TestTypeStrings", _xtest.TestTypeStrings},

	{"TestOffsetLock", _xtest.TestOffsetLock},

	{"TestSwapper", _xtest.TestSwapper},

	{"TestUnaddressableField", _xtest.TestUnaddressableField},

	{"TestAliasNames", _xtest.TestAliasNames},

	{"TestIssue22031", _xtest.TestIssue22031},

	{"TestIssue22073", _xtest.TestIssue22073},

	{"TestMapIterNonEmptyMap", _xtest.TestMapIterNonEmptyMap},

	{"TestMapIterNilMap", _xtest.TestMapIterNilMap},

	{"TestMapIterReset", _xtest.TestMapIterReset},

	{"TestMapIterSafety", _xtest.TestMapIterSafety},

	{"TestMapIterNext", _xtest.TestMapIterNext},

	{"TestMapIterDelete0", _xtest.TestMapIterDelete0},

	{"TestMapIterDelete1", _xtest.TestMapIterDelete1},

	{"TestConvertibleTo", _xtest.TestConvertibleTo},

	{"TestSetIter", _xtest.TestSetIter},

	{"TestMethodCallValueCodePtr", _xtest.TestMethodCallValueCodePtr},

	{"TestIssue50208", _xtest.TestIssue50208},

	{"TestNegativeKindString", _xtest.TestNegativeKindString},

	{"TestValue_Cap", _xtest.TestValue_Cap},

	{"TestValue_Len", _xtest.TestValue_Len},

	{"TestValue_Comparable", _xtest.TestValue_Comparable},

	{"TestValue_Equal", _xtest.TestValue_Equal},

	{"TestValue_EqualNonComparable", _xtest.TestValue_EqualNonComparable},

	{"TestInitFuncTypes", _xtest.TestInitFuncTypes},

	{"TestClear", _xtest.TestClear},

	{"TestValuePointerAndUnsafePointer", _xtest.TestValuePointerAndUnsafePointer},

	{"TestSliceAt", _xtest.TestSliceAt},

	{"TestMapOfKeyUpdate", _xtest.TestMapOfKeyUpdate},

	{"TestMapOfKeyPanic", _xtest.TestMapOfKeyPanic},

	{"TestTypeAssert", _xtest.TestTypeAssert},

	{"TestTypeAssertMethod", _xtest.TestTypeAssertMethod},

	{"TestTypeAssertPanic", _xtest.TestTypeAssertPanic},

	{"TestTypeAssertAllocs", _xtest.TestTypeAssertAllocs},

	{"TestValueSeq", _xtest.TestValueSeq},

	{"TestValueSeq2", _xtest.TestValueSeq2},

	{"TestGroupSizeZero", _xtest.TestGroupSizeZero},

	{"TestNotInHeapDeref", _xtest.TestNotInHeapDeref},

	{"TestImplicitMapConversion", _xtest.TestImplicitMapConversion},

	{"TestImplicitSetConversion", _xtest.TestImplicitSetConversion},

	{"TestImplicitSendConversion", _xtest.TestImplicitSendConversion},

	{"TestImplicitCallConversion", _xtest.TestImplicitCallConversion},

	{"TestImplicitAppendConversion", _xtest.TestImplicitAppendConversion},

	{"TestImplements", _xtest.TestImplements},

	{"TestAssignableTo", _xtest.TestAssignableTo},

	{"TestTypeFor", _xtest.TestTypeFor},

	{"TestStructOfEmbeddedIfaceMethodCall", _xtest.TestStructOfEmbeddedIfaceMethodCall},

	{"TestIsRegularMemory", _xtest.TestIsRegularMemory},

	{"TestType_CanSeq", _xtest.TestType_CanSeq},

	{"TestType_CanSeq2", _xtest.TestType_CanSeq2},

	{"TestFields", _xtest.TestFields},

	{"TestFieldByIndexErr", _xtest.TestFieldByIndexErr},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkTypeAssert", _xtest.BenchmarkTypeAssert},

	{"BenchmarkBool", _xtest.BenchmarkBool},

	{"BenchmarkString", _xtest.BenchmarkString},

	{"BenchmarkBytes", _xtest.BenchmarkBytes},

	{"BenchmarkNamedBytes", _xtest.BenchmarkNamedBytes},

	{"BenchmarkBytesArray", _xtest.BenchmarkBytesArray},

	{"BenchmarkSliceLen", _xtest.BenchmarkSliceLen},

	{"BenchmarkMapLen", _xtest.BenchmarkMapLen},

	{"BenchmarkStringLen", _xtest.BenchmarkStringLen},

	{"BenchmarkArrayLen", _xtest.BenchmarkArrayLen},

	{"BenchmarkSliceCap", _xtest.BenchmarkSliceCap},

	{"BenchmarkDeepEqual", _xtest.BenchmarkDeepEqual},

	{"BenchmarkMapsDeepEqual", _xtest.BenchmarkMapsDeepEqual},

	{"BenchmarkIsZero", _xtest.BenchmarkIsZero},

	{"BenchmarkSetZero", _xtest.BenchmarkSetZero},

	{"BenchmarkZero", _xtest.BenchmarkZero},

	{"BenchmarkSelect", _xtest.BenchmarkSelect},

	{"BenchmarkCall", _xtest.BenchmarkCall},

	{"BenchmarkCallMethod", _xtest.BenchmarkCallMethod},

	{"BenchmarkCallArgCopy", _xtest.BenchmarkCallArgCopy},

	{"BenchmarkPtrTo", _xtest.BenchmarkPtrTo},

	{"BenchmarkFieldByName1", _xtest.BenchmarkFieldByName1},

	{"BenchmarkFieldByName2", _xtest.BenchmarkFieldByName2},

	{"BenchmarkFieldByName3", _xtest.BenchmarkFieldByName3},

	{"BenchmarkInterfaceBig", _xtest.BenchmarkInterfaceBig},

	{"BenchmarkInterfaceSmall", _xtest.BenchmarkInterfaceSmall},

	{"BenchmarkNew", _xtest.BenchmarkNew},

	{"BenchmarkMap", _xtest.BenchmarkMap},

	{"BenchmarkMapIterNext", _xtest.BenchmarkMapIterNext},

	{"BenchmarkTypeForString", _xtest.BenchmarkTypeForString},

	{"BenchmarkTypeForError", _xtest.BenchmarkTypeForError},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleKind", _xtest.ExampleKind, "hi\n42\nunhandled kind func\n", false},

	{"ExampleMakeFunc", _xtest.ExampleMakeFunc, "1 0\n3.14 2.72\n", false},

	{"ExampleStructTag", _xtest.ExampleStructTag, "blue gopher\n", false},

	{"ExampleStructTag_Lookup", _xtest.ExampleStructTag_Lookup, "field_0\n(blank)\n(not specified)\n", false},

	{"ExampleTypeOf", _xtest.ExampleTypeOf, "true\n", false},

	{"ExampleStructOf", _xtest.ExampleStructOf, "value: &{Height:0.4 Age:2}\njson:  {\"height\":0.4,\"age\":2}\nvalue: &{Height:1.5 Age:10}\n", false},

	{"ExampleValue_FieldByIndex", _xtest.ExampleValue_FieldByIndex, "embedded last name: Embedded Doe\n", false},

	{"ExampleValue_FieldByName", _xtest.ExampleValue_FieldByName, "Name: John\n", false},

}

func init() {

	testdeps.ImportPath = "reflect"
}

func main() {
	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

